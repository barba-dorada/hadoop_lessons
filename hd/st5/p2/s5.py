"""
Реализуйте mapper в задаче поиска кратчайшего пути с помощью Hadoop Streaming.

Входные и выходные данные: в качестве ключа идет номер вершины, значение состоит из двух полей, разделенных табуляцией:

Минимальное расстояние до данной вершины (если его еще нет, то пишется INF)
Список исходящих вершин (через "," в фигурных скобках)

Пример работы mapper на второй итерации обработки следующего графа:

Sample Input:
1	0	{2,3,4}
2	1	{5,6}
3	1	{}
4	1	{7,8}
5	INF	{9,10}
6	INF	{}
7	INF	{}
8	INF	{}
9	INF	{}
10	INF	{}
Sample Output:
1	0	{2,3,4}
2	1	{}
3	1	{}
4	1	{}
2	1	{5,6}
5	2	{}
6	2	{}
3	1	{}
4	1	{7,8}
7	2	{}
8	2	{}
5	INF	{9,10}
9	INF	{}
10	INF	{}
6	INF	{}
7	INF	{}
8	INF	{}
9	INF	{}
10	INF	{}

"""
import sys

for line in sys.stdin:
    (n, l, nn) = line.strip().split('\t')
    print(n + '\t' + l + '\t' + nn)
    if nn != '{}':
        nnn = nn[1:-1]
        for n0 in nnn.split(','):
            ll = l
            if ll != 'INF':
                ll = str(int(ll) + 1)
            print(n0 + '\t' + ll + '\t{}')
