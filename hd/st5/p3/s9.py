"""
Реализуйте reducer для алгоритма расчета PageRank с помощью Hadoop Streaming.
Используйте упрощенный алгоритм (без случайных переходов).

Входные и выходные данные: В качестве ключа идет номер вершины.
Значение составное: через табуляцию записано значение PageRank (округленное до 3-го знака после запятой)
и список смежных вершин (через "," в фигурных скобках).

Пример работы reducer приведен для графа из лекции (при этом номера вершин приведены без n):

Sample Input:
1	0.067	{}
1	0.200	{2,4}
2	0.067	{}
2	0.100	{}
2	0.200	{3,5}
3	0.067	{}
3	0.100	{}
3	0.200	{4}
4	0.100	{}
4	0.200	{}
4	0.200	{5}
5	0.100	{}
5	0.200	{}
5	0.200	{1,2,3}
Sample Output:
1	0.067	{2,4}
2	0.167	{3,5}
3	0.167	{4}
4	0.300	{5}
5	0.300	{1,2,3}
"""

import sys

np = None
rankp = 0.0
lp = '{}'

for line in sys.stdin:

    (n, rank, l) = line.strip().split('\t')

    if n != np:
        if np is not None:
            print(np + '\t' + format(rankp, '0.3f') + '\t' + lp)
        np = n
        lp = '{}'
        rankp = 0.0

    if l != '{}':
        lp = l
    else:
        rankp += float(rank)

print(np + '\t' + format(rankp, '0.3f') + '\t' + lp)

